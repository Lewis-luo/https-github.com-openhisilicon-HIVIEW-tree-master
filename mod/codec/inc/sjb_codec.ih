#pragma pack(push, 4)

STRUCT(gsf_venc_t)
{
  FIELD(int, en);
  FIELD(int, type);
  FIELD(int, width);
  FIELD(int, height);
  FIELD(int, fps);
  FIELD(int, gop);
  FIELD(int, flow);
  FIELD(int, bitrate);
  FIELD(int, profile);
  FIELD(int, qp);
};


STRUCT(gsf_aenc_t)
{
  FIELD(int, en);
  FIELD(int, type);
  FIELD(int, sprate);
  FIELD(int, vol);
};

STRUCT(gsf_osd_t)
{
  FIELD(int, en);
  FIELD(int, type);
  FIELD(int, fontsize);
  ARRAY(int, point, 2);
  ARRAY(int, wh, 2);
  STRING(text, 4096);
};

STRUCT(gsf_vmask_t)
{
  FIELD(int, en);
  ARRAY(int, rect, 4);
  FIELD(int, color);
};

STRUCT(gsf_vi_t)
{
  FIELD(int, wdr);
  FIELD(int, fps);
  FIELD(int, res);
};

STRUCT(gsf_vo_t)
{
  FIELD(int, intf);  // 0: HDMI, 1: MIPI
  FIELD(int, sync); // 
};

STRUCT(gsf_codec_ipc_t)
{
  //1
  FIELD(gsf_vi_t,    vi);
  FIELD(gsf_vo_t,    vo);
  FIELD(gsf_aenc_t,  aenc);
  //2
  ARRAY(gsf_venc_t,  venc,  GSF_CODEC_VENC_NUM);
  ARRAY(gsf_osd_t,   osd,   GSF_CODEC_OSD_NUM);
  ARRAY(gsf_vmask_t, vmask, GSF_CODEC_VMASK_NUM); 
  //3
};


STRUCT(gsf_codec_nvr_t)
{
  FIELD(int, resolu);
  ARRAY(gsf_venc_t, venc, GSF_CODEC_VENC_NUM);
};

STRUCT(gsf_lens_t)
{
  FIELD(int, cmd); // GSF_LENS_CMD_E
  FIELD(int, arg1);
  FIELD(int, arg2);
};


#pragma pack(pop)
